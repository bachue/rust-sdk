language: rust
matrix:
  include:
    - os: linux
      dist: bionic
      rust:
        - 1.38.0
      before_script:
        - sudo apt update -yqq
        - sudo apt install -yqq curl libcurl4 git-core build-essential
        - cargo install --force cbindgen
      script:
        - |
            if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then
              for dir in qiniu-rust qiniu-rust-http qiniu-rust-with-libcurl qiniu-rust-test qiniu-rust-test-utils qiniu-c; do
                make -C $dir test
              done
            fi
    - os: linux
      dist: bionic
      rust:
        - 1.38.0
      before_script:
        - sudo apt update -yqq
        - sudo apt install -yqq curl libcurl4 git-core build-essential pkg-config libssl-dev zlib1g-dev libreadline-dev openjdk-8-jdk llvm-9 libclang1-9
        - cargo install --force cbindgen
        - |
            export PATH="$PATH:/usr/lib/llvm-9/bin"
        - |
            export PATH="$PATH:$HOME/.rbenv/bin"
            curl -fsSL https://github.com/rbenv/rbenv-installer/raw/master/bin/rbenv-installer | bash
            eval "$(rbenv init -)"
            curl -fsSL https://github.com/rbenv/rbenv-installer/raw/master/bin/rbenv-doctor | bash
            mkdir -p "$(rbenv root)"/plugins
            git clone https://github.com/rbenv/ruby-build.git "$(rbenv root)"/plugins/ruby-build
            eval "$(rbenv init -)"
            rbenv install 2.4.0
            rbenv shell 2.4.0
            gem install bundler
            rbenv install jruby-9.2.0.0
            rbenv shell jruby-9.2.0.0
            gem install bundler
      script:
        - make -C qiniu-c build
        - |
            if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then
              rbenv shell 2.4.0
              for dir in qiniu-ruby; do
                make -C $dir test
              done
              rbenv shell jruby-9.2.0.0
              for dir in qiniu-ruby; do
                make -C $dir test
              done
            fi
    - os: osx
      rust:
        - 1.38.0
      before_script:
        - brew install curl
        - cargo install --force cbindgen
      script:
        - |
            if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then
              for dir in qiniu-rust qiniu-rust-http qiniu-rust-with-libcurl qiniu-rust-test qiniu-rust-test-utils qiniu-c; do
                make -C $dir test
              done
            fi
    - os: osx
      rust:
        - 1.38.0
      before_script:
        - brew install curl rbenv llvm
        - |
            export PATH="$(brew --prefix llvm)/bin:$PATH"
        - cargo install --force cbindgen
      script:
        - make -C qiniu-c build
        - |
            eval "$(rbenv init -)"
            rbenv install 2.4.0
            rbenv global 2.4.0
            gem install bundler
        - |
            if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then
              for dir in qiniu-ruby; do
                make -C $dir test
              done
            fi
    - os: windows
      rust:
        - 1.38.0-x86_64-pc-windows-msvc
      before_script:
        - choco install make --force
        - choco install doxygen.install --force
        - choco install curl --version=7.67.0 --force
        - cargo install --force cbindgen
      script:
        - |
            if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then
              cd qiniu-c
              cp /c/ProgramData/chocolatey/lib/curl/tools/curl-7.67.0-win64-mingw/bin/*.dll .
              cp -r /c/ProgramData/chocolatey/lib/curl/tools/curl-7.67.0-win64-mingw/include/curl .
              echo '"C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Auxiliary\Build\vcvarsall.bat" amd64 && make build || exit 1' | cmd.exe
              cp ../target/debug/qiniu_ng_c.dll* .
              echo '"C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\VC\Auxiliary\Build\vcvarsall.bat" amd64 && make test || exit 1' | cmd.exe
            fi
