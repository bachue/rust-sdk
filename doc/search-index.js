var N=null,E="",T="t",U="u",searchIndex={};
var R=["config","credential","option","uploadlogger","duration","string","uc_host","UC 服务器地址（仅需要指定主机地址和端口，无需包含协议）","rs_host","RS 服务器地址（仅需要指定主机地址和端口，无需包含协议）","rsf_host","RSF 服务器地址（仅需要指定主机地址和端口，无需包含协议）","api_host","API 服务器地址（仅需要指定主机地址和端口，无需包含协议）","uplog_host","UpLog 服务器地址（仅需要指定主机地址和端口，无需包含协议）","upload_logger","上传日志记录仪","upload_recorder","上传进度记录仪","uploadrecorder","http_request_before_action_handlers","HTTP 请求前回调函数","http_request_after_action_handlers","HTTP 请求响应后回调函数","domains_manager","域名管理器","domainsmanager","use_https","是否使用 HTTPS 协议","upload_token_lifetime","上传凭证有效期","batch_max_operation_size","最大批量操作数","upload_threshold","如果上传文件尺寸大于该值，将自动使用分片上传，否则，使用表单上传","upload_block_size","上传分块尺寸，尺寸越小越适合弱网环境，必须是 4 MB 的倍数","http_connect_timeout","HTTP 请求连接超时时长","http_request_timeout","HTTP 请求超时时长","tcp_keepalive_idle_timeout","TCP KeepAlive 空闲时长","tcp_keepalive_probe_interval","TCP KeepAlive 探测包的发送间隔","http_low_transfer_speed","HTTP 最低传输速度","http_low_transfer_speed_timeout","HTTP 最低传输速度维持时长","http_request_retries","HTTP 请求重试次数","http_request_retry_delay","HTTP 请求重试前等待时间","appended_user_agent","追加的用户代理","http_request_handler","qiniu_ng","response","UnknownError","URLParseError","qiniu_ng::http::domains_manager","ResolveError","JSONError","domainsmanagerbuilder","pathbuf","ioresult","persistent","persistentresult","urlparseresult","url_frozen_duration","resolutions_cache_lifetime","域名解析缓存生命周期","auto_persistent_interval","自动持久化间隔时间","url_resolve_retries","URL 域名预解析重试次数","url_resolve_retry_delay","URL 域名预解析重试前等待时间","qiniu_ng::http","request","result","region","存储空间区域迭代器","bucketregioniter","qiniu_ng::storage","httpresult","获取上传管理器","uploadmanager","recorder","region_id","存储区域 ID","regionid","up_http_urls","上传服务器 URL 列表（HTTP 协议）","up_https_urls","上传服务器 URL 列表（HTTPS 协议）","io_http_urls","IO 服务器 URL 列表（HTTP 协议）","io_https_urls","IO 服务器 URL 列表（HTTPS 协议）","rs_http_urls","RS 服务器 URL 列表（HTTP 协议）","rs_https_urls","RS 服务器 URL 列表（HTTPS 协议）","rsf_http_urls","RSF 服务器 URL 列表（HTTP 协议）","rsf_https_urls","RSF 服务器 URL 列表（HTTPS 协议）","api_http_urls","API 服务器 URL 列表（HTTP 协议）","api_https_urls","API 服务器 URL 列表（HTTPS 协议）","获取华东区公有云区域实例","获取华北区公有云区域实例","获取华南区公有云区域实例","UploadTokenParseError","上传凭证解析错误","bucketuploaderbuilder","uploadpolicy","fileuploaderbuilder","thread_pool","为指定的文件上传指定线程池","thread_pool_size","为上传器创建专用线程池指定线程池大小","上传进度回调","uploadresult","log_file_path","lock_policy","lockpolicy","根据上传凭证创建文件上传器生成器","createuploaderresult","systemtime","token_lifetime","token_deadline","uploadpolicyerror","return_url","Web 端文件上传成功后，浏览器执行 303 跳转的 URL","return_body","自定义对象名称","file_size_limitation","限定上传文件尺寸的范围","mime_types","限定用户上传的文件类型","object_lifetime","对象生命周期","object_deadline","upload_block_lifetime","always_flush_records","当响应体为 JSON 时，返回 JSON 值","将响应体转换为二进制数据","access_key","uploadtokenparseresult","qiniu_ng::utils","clone_into","borrow_mut","qiniu_ng::config","try_from","try_into","to_owned","type_id","to_string","qiniu_ng::storage::bucket","qiniu_ng::storage::manager","qiniu_ng::storage::recorder","qiniu_ng::storage::region","qiniu_ng::storage::uploader","qiniu_ng::utils::etag","formatter","headername","retrykind","ordering","as_downcastable","default","storagemanager","regionbuilder","bucketuploader","uploadrecorderbuilder","uploadtoken","errorkind","httpcallererrorkind","Credential","ConfigBuilder","ConfigInner","ErrorKind","HTTPCaller","HTTPCallerErrorKind","RetryKind","PersistentError","DomainsManagerBuilder","DomainsManager","HTTPAfterAction","HTTPBeforeAction","BucketBuilder","DropBucketError","StorageManager","FileSystemRecorder","RegionBuilder","UploadError","UploadLoggerFileLockPolicy","CreateUploaderError","BucketUploaderBuilder","BucketUploader","FileUploaderBuilder","UploadLoggerBuilder","UploadLogger","UploadManager","UploadPolicy","UploadPolicyBuilder","UploadRecorderBuilder","UploadRecorder","UploadResponse","UploadToken","HeaderName","BucketRegionIter"];

searchIndex["qiniu_ng"]={"doc":"七牛云新一代 Rust SDK","i":[[3,"Client",R[57],"七牛 SDK 客户端",N,N],[3,R[181],E,"认证信息",N,N],[11,"new",E,"构建 SDK 客户端",0,[[[R[0]]],["client"]]],[11,"storage",E,"获取存储空间管理器",0,[[["self"]],[R[174]]]],[11,"upload",E,R[87],0,[[["self"]],[R[88]]]],[11,R[0],E,"获取客户端配置",0,[[["self"]],[R[0]]]],[11,R[1],E,"获取客户端认证信息",0,[[["self"]],[R[1]]]],[11,"new",E,"创建认证，注意该方法不会验证 Access Key 和 Secret Key 的有效性。",1,[[],[R[1]]]],[11,R[151],E,"获取七牛 Access Key",1,[[["self"]],["str"]]],[11,"secret_key",E,"获取七牛 Secret Key",1,[[["self"]],["str"]]],[11,"is_valid_request",E,"验证七牛回调请求",1,[[["self"],[R[80]]],["bool"]]],[11,"sign_upload_policy",E,"对上传策略进行签名，将其转变为上传凭证",1,[[["self"],[R[119]]],[R[5]]]],[0,R[0],E,"七牛客户端配置模块",N,N],[3,R[183],R[156],"七牛客户端配置内容",N,N],[3,R[182],E,"Builder for `ConfigInner`.",N,N],[3,"Config",E,"七牛客户端配置",N,N],[11,R[54],E,R[55],2,[[["into",[R[2]]],[R[2],["cow"]]],["self"]]],[11,R[28],E,R[29],2,[[["bool"]],["self"]]],[11,R[6],E,R[7],2,[[["into",["cow"]],["cow",["str"]]],["self"]]],[11,R[8],E,R[9],2,[[["into",["cow"]],["cow",["str"]]],["self"]]],[11,R[10],E,R[11],2,[[["into",["cow"]],["cow",["str"]]],["self"]]],[11,R[12],E,R[13],2,[[["into",["cow"]],["cow",["str"]]],["self"]]],[11,R[14],E,R[15],2,[[["into",["cow"]],["cow",["str"]]],["self"]]],[11,R[30],E,R[31],2,[[[R[4]]],["self"]]],[11,R[32],E,R[33],2,[[["usize"]],["self"]]],[11,R[34],E,R[35],2,[[["u32"]],["self"]]],[11,R[36],E,R[37],2,[[["u32"]],["self"]]],[11,R[16],E,R[17],2,[[[R[2],[R[3]]],[R[3]]],["self"]]],[11,R[18],E,R[19],2,[[[R[20]]],["self"]]],[11,R[38],E,R[39],2,[[[R[4]]],["self"]]],[11,R[40],E,R[41],2,[[[R[4]]],["self"]]],[11,R[42],E,R[43],2,[[[R[4]]],["self"]]],[11,R[44],E,R[45],2,[[[R[4]]],["self"]]],[11,R[46],E,R[47],2,[[["u32"]],["self"]]],[11,R[48],E,R[49],2,[[[R[4]]],["self"]]],[11,R[50],E,R[51],2,[[["usize"]],["self"]]],[11,R[52],E,R[53],2,[[[R[4]]],["self"]]],[11,R[21],E,R[22],2,[[["box",["httpbeforeaction"]],["vec",["box"]]],["self"]]],[11,R[23],E,R[24],2,[[["box",["httpafteraction"]],["vec",["box"]]],["self"]]],[11,R[25],E,R[26],2,[[[R[27]]],["self"]]],[11,"user_agent",E,"用户代理",3,[[["self"]],[R[5]]]],[11,R[6],E,R[7],3,[[["self"]],["cow"]]],[11,R[8],E,R[9],3,[[["self"]],["cow"]]],[11,R[10],E,R[11],3,[[["self"]],["cow"]]],[11,R[12],E,R[13],3,[[["self"]],["cow"]]],[11,R[14],E,R[15],3,[[["self"]],["cow"]]],[11,R[16],E,R[17],3,[[["self"]],[R[2]]]],[11,R[18],E,R[19],3,[[["self"]],[R[20]]]],[11,R[21],E,R[22],3,[[["self"]],["vec"]]],[11,R[23],E,R[24],3,[[["self"]],["vec"]]],[11,R[56],E,"HTTP 请求处理函数",3,[[["self"]],["box"]]],[11,R[25],E,R[26],3,[[["self"]],[R[27]]]],[11,R[28],E,R[29],3,[[["self"]],["bool"]]],[11,R[30],E,R[31],3,[[["self"]],[R[4]]]],[11,R[32],E,R[33],3,[[["self"]],["usize"]]],[11,R[34],E,R[35],3,[[["self"]],["u32"]]],[11,R[36],E,R[37],3,[[["self"]],["u32"]]],[11,R[38],E,R[39],3,[[["self"]],[R[4]]]],[11,R[40],E,R[41],3,[[["self"]],[R[4]]]],[11,R[42],E,R[43],3,[[["self"]],[R[4]]]],[11,R[44],E,R[45],3,[[["self"]],[R[4]]]],[11,R[46],E,R[47],3,[[["self"]],["u32"]]],[11,R[48],E,R[49],3,[[["self"]],[R[4]]]],[11,R[50],E,R[51],3,[[["self"]],["usize"]]],[11,R[52],E,R[53],3,[[["self"]],[R[4]]]],[11,R[54],E,R[55],3,[[["self"]],[[R[2],["str"]],["str"]]]],[11,"uc_url",E,"UC 服务器 URL",3,[[["self"]],[R[5]]]],[11,"rs_url",E,"RS 服务器 URL",3,[[["self"]],[R[5]]]],[11,"rsf_url",E,"RSF 服务器 URL",3,[[["self"]],[R[5]]]],[11,"api_url",E,"API 服务器 URL",3,[[["self"]],[R[5]]]],[11,"uplog_url",E,"UpLog 服务器 URL",3,[[["self"]],[R[5]]]],[11,R[56],E,"设置 HTTP 请求处理函数",2,[[],["self"]]],[11,"append_http_request_before_action_handler",E,"追加 HTTP 请求前回调函数",2,[[],["self"]]],[11,"prepend_http_request_before_action_handler",E,"新增 HTTP 请求前回调函数",2,[[],["self"]]],[11,"append_http_request_after_action_handler",E,"追加 HTTP 请求响应后回调函数",2,[[],["self"]]],[11,"prepend_http_request_after_action_handler",E,"新增 HTTP 请求响应后回调函数",2,[[],["self"]]],[11,"build",E,"生成客户端配置",2,[[],[R[0]]]],[0,"http",R[57],"HTTP 模块",N,N],[3,"Error",R[79],E,N,N],[4,R[184],E,E,N,N],[13,"HTTPCallerError",E,E,4,N],[13,R[63],E,E,4,N],[13,"MaliciousResponse",E,E,4,N],[13,"UnexpectedRedirect",E,E,4,N],[13,"IOError",E,E,4,N],[13,R[59],E,E,4,N],[13,"ResponseStatusCodeError",E,E,4,N],[13,"UserCanceled",E,E,4,N],[8,R[185],E,E,N,N],[10,"call",E,E,5,[[["self"],[R[80]]],[["error"],[R[81],[R[58],"error"]],[R[58]]]]],[4,R[186],E,E,N,N],[13,R[62],E,E,6,N],[13,"ProxyError",E,E,6,N],[13,"SSLError",E,E,6,N],[13,"ConnectionError",E,E,6,N],[13,"RequestError",E,E,6,N],[13,"ResponseError",E,E,6,N],[13,"TimeoutError",E,E,6,N],[13,R[59],E,E,6,N],[3,R[213],E,E,N,N],[6,"HeaderValue",E,E,N,N],[6,"Headers",E,E,N,N],[4,"Method",E,E,N,N],[13,"GET",E,E,7,N],[13,"HEAD",E,E,7,N],[13,"POST",E,E,7,N],[13,"PUT",E,E,7,N],[6,"Result",E,E,N,N],[4,R[187],E,E,N,N],[13,"RetryableError",E,E,8,N],[13,"ZoneUnretryableError",E,E,8,N],[13,"HostUnretryableError",E,E,8,N],[13,"UnretryableError",E,E,8,N],[6,"StatusCode",E,E,N,N],[0,R[25],E,"域名管理 模块",N,N],[3,R[189],R[61],"域名管理器生成器",N,N],[3,R[190],E,R[26],N,N],[3,"Choice",E,"候选 URL",N,N],[12,"base_url",E,E,9,N],[12,"socket_addrs",E,E,9,N],[4,R[60],E,"URL 解析错误",N,N],[13,"InvalidURL",E,E,10,N],[12,"url","qiniu_ng::http::domains_manager::URLParseError",E,10,N],[13,R[60],R[61],E,10,N],[4,R[62],E,"URL 域名解析错误",N,N],[13,R[60],E,E,11,N],[13,R[62],E,E,11,N],[4,R[188],E,"持久化错误",N,N],[13,R[63],E,E,12,N],[13,"IOError",E,E,12,N],[6,"URLParseResult",E,"URL 解析结果",N,N],[6,"ResolveResult",E,"URL 域名解析结果",N,N],[6,"PersistentResult",E,"持久化结果",N,N],[11,R[70],E,"设置 URL 冻结时长",13,[[[R[4]]],["self"]]],[11,R[71],E,R[72],13,[[[R[4]]],["self"]]],[11,"disable_url_resolution",E,"禁止 URL 域名预解析",13,[[],["self"]]],[11,"enable_url_resolution",E,"启用 URL 域名预解析",13,[[],["self"]]],[11,R[73],E,R[74],13,[[[R[4]]],["self"]]],[11,"disable_auto_persistent",E,"禁止自动持久化",13,[[],["self"]]],[11,R[75],E,R[76],13,[[["usize"]],["self"]]],[11,R[77],E,R[78],13,[[[R[4]]],["self"]]],[11,R[67],E,"设置持久化路径",13,[[],[R[66]]]],[11,"disable_persistent",E,"禁止持久化",13,[[],["self"]]],[11,"persistent_file",E,"设置持久化文件",13,[[["file"]],["self"]]],[11,"pre_resolve_url",E,"添加域名预解析 URL",13,[[["into",["cow"]],["cow",["str"]]],["self"]]],[11,"build",E,"构建域名管理器",13,[[],[R[27]]]],[11,"load_from_file",E,"从指定路径加载域名管理器生成器",13,[[["into",[R[65]]],[R[65]]],[[R[64]],[R[68],[R[64]]]]]],[11,"create_new",E,"创建新的域名管理器生成器",13,[[["into",[R[65]]],[R[2]],[R[65]]],[[R[64]],[R[66],[R[64]]]]]],[11,R[67],E,"持久化域名管理器的状态",14,[[["self"]],[[R[68]],[R[2],[R[68]]]]]],[11,"choose",E,"选择域名并给出域名解析结果",14,[[["self"]],[["vec",["choice"]],["resolveresult",["vec"]]]]],[11,"freeze_url",E,"冻结指定域名",14,[[["self"],["str"]],[R[69]]]],[11,"unfreeze_urls",E,"立即解冻指定域名",14,[[["self"]]]],[11,"is_frozen_url",E,"判定域名是否被冻结",14,[[["self"],["str"]],[[R[69],["bool"]],["bool"]]]],[11,"async_resolve_config",E,E,14,[[["self"],[R[0]]]]],[11,"async_resolve_region",E,E,14,[[["self"],[R[82]]]]],[11,R[70],E,"URL 冻结时长",14,[[["self"]],[R[4]]]],[11,R[71],E,R[72],14,[[["self"]],[R[4]]]],[11,"url_resolution_disabled",E,"是否禁止 URL 域名解析",14,[[["self"]],["bool"]]],[11,R[73],E,R[74],14,[[["self"]],[[R[4]],[R[2],[R[4]]]]]],[11,"auto_persistent_disabled",E,"是否禁止自动持久化",14,[[["self"]],["bool"]]],[11,R[75],E,R[76],14,[[["self"]],["usize"]]],[11,R[77],E,R[78],14,[[["self"]],[R[4]]]],[11,"persistent_file_path",E,"持久化路径",14,[[["self"]],[["path"],[R[2],["path"]]]]],[8,R[191],R[79],R[24],N,N],[10,"after_call",E,E,15,[[["self"],[R[58]],[R[80]]],[R[81]]]],[8,R[192],E,R[22],N,N],[10,"before_call",E,E,16,[[["self"],[R[80]]],[R[81]]]],[0,"storage",R[57],"存储模块",N,N],[0,"bucket",R[85],"存储空间模块",N,N],[3,"Bucket",R[162],"存储空间",N,N],[3,R[193],E,"存储空间生成器",N,N],[3,R[214],E,R[83],N,N],[11,R[82],E,"指定存储空间区域",17,[[["self"]],["self"]]],[11,R[90],E,"指定存储空间 ID",17,[[["self"],[R[92]]],["self"]]],[11,"auto_detect_region",E,"自动检测区域",17,[[["self"]],[["self"],[R[81]]]]],[11,"prepend_domain",E,"新增下载域名",17,[[["self"]],["self"]]],[11,"auto_detect_domains",E,"自动检测下载域名",17,[[["self"]],[["self"],[R[81]]]]],[11,"build",E,"生成存储空间",17,[[["self"]],["bucket"]]],[11,"reset",E,"重置生成器",17,[[["self"]],["self"]]],[11,"name",E,"存储空间名称",18,[[["self"]],["str"]]],[11,R[82],E,"存储空间区域",18,[[["self"]],[[R[81],[R[82]]],[R[82]]]]],[11,"regions",E,R[83],18,[[["self"]],[[R[81],[R[84]]],[R[84]]]]],[11,"domains",E,"存储空间下载域名列表",18,[[["self"]],[[R[81],["vec"]],["vec",["str"]]]]],[11,"uploader",E,"获取当前存储空间上传生成器",18,[[["self"]],[R[118]]]],[0,"manager",R[85],"存储管理模块",N,N],[3,R[195],R[163],"存储管理器",N,N],[4,R[194],E,"删除存储空间错误",N,N],[13,"HTTPError",E,E,19,N],[13,"CannotDropNonEmptyBucket",E,E,19,N],[6,"DropBucketResult",E,"删除存储空间结果",N,N],[11,"bucket_names",E,"列出所有存储空间名称",20,[[["self"]],[[R[86],["vec"]],["vec",[R[5]]]]]],[11,"create_bucket",E,"创建存储空间",20,[[["self"]],[R[86]]]],[11,"drop_bucket",E,"删除存储空间",20,[[["self"]],["dropbucketresult"]]],[11,"upload_manager",E,R[87],20,[[["self"]],[R[88]]]],[11,"bucket",E,"获取存储空间实例生成器",20,[[["self"]],["bucketbuilder"]]],[11,R[1],E,E,20,[[["self"]],[R[1]]]],[0,R[89],R[85],"记录仪模块",N,N],[3,R[196],R[164],"文件系统记录仪",N,N],[8,"Recorder",E,"记录仪特性",N,N],[10,"open",E,"用于打开一个记录仪介质",21,[[["self"],["str"],["bool"]],[["arc",["mutex"]],[R[81],["arc"]]]]],[10,"delete",E,"用于删除一个记录仪介质",21,[[["self"],["str"]],[R[81]]]],[10,R[172],E,"提供面向 `std::any::Any` 的类型转换",21,[[["self"]],["any"]]],[8,"RecordMedium",E,"记录仪介质特性",N,N],[11,"default_root_directory",E,"文件系统记录仪默认目录",22,[[],[R[65]]]],[11,"from",E,"基于指定目录创建文件系统记录仪",22,[[],[[R[89]],["arc",[R[89]]]]]],[11,R[173],E,"基于默认的目录创建文件系统记录仪",22,[[],[[R[89]],["arc",[R[89]]]]]],[11,"root_directory",E,"文件系统记录仪目录",22,[[["self"]],["path"]]],[0,R[82],R[85],"区域模块",N,N],[3,"Region",R[165],"区域",N,N],[3,R[197],E,"Builder for `Region`.",N,N],[4,"RegionId",E,R[91],N,N],[13,"Z0",E,"华东区区域 ID",23,N],[13,"Z1",E,"华北区区域 ID",23,N],[13,"Z2",E,"华南区区域 ID",23,N],[13,"AS0",E,"东南亚地区区域 ID",23,N],[13,"NA0",E,"北美地区区域 ID",23,N],[11,"as_str",E,"获取区域 ID 的字符串",23,[[],["str"]]],[11,"as_region",E,"根据区域 ID 获取区域实例",23,[[],[R[82]]]],[11,R[93],E,R[94],24,[[["self"]],["vec"]]],[11,R[95],E,R[96],24,[[["self"]],["vec"]]],[11,R[97],E,R[98],24,[[["self"]],["vec"]]],[11,R[99],E,R[100],24,[[["self"]],["vec"]]],[11,R[101],E,R[102],24,[[["self"]],["vec"]]],[11,R[103],E,R[104],24,[[["self"]],["vec"]]],[11,R[105],E,R[106],24,[[["self"]],["vec"]]],[11,R[107],E,R[108],24,[[["self"]],["vec"]]],[11,R[109],E,R[110],24,[[["self"]],["vec"]]],[11,R[111],E,R[112],24,[[["self"]],["vec"]]],[11,R[90],E,R[91],24,[[["self"]],[[R[92]],[R[2],[R[92]]]]]],[11,R[90],E,R[91],25,[[["self"],["into",[R[2]]],[R[2],[R[92]]]],["self"]]],[11,R[93],E,R[94],25,[[["self"],["vec",["cow"]],["into",["vec"]]],["self"]]],[11,R[95],E,R[96],25,[[["self"],["vec",["cow"]],["into",["vec"]]],["self"]]],[11,R[97],E,R[98],25,[[["self"],["vec",["cow"]],["into",["vec"]]],["self"]]],[11,R[99],E,R[100],25,[[["self"],["vec",["cow"]],["into",["vec"]]],["self"]]],[11,R[101],E,R[102],25,[[["self"],["vec",["cow"]],["into",["vec"]]],["self"]]],[11,R[103],E,R[104],25,[[["self"],["vec",["cow"]],["into",["vec"]]],["self"]]],[11,R[105],E,R[106],25,[[["self"],["vec",["cow"]],["into",["vec"]]],["self"]]],[11,R[107],E,R[108],25,[[["self"],["vec",["cow"]],["into",["vec"]]],["self"]]],[11,R[109],E,R[110],25,[[["self"],["vec",["cow"]],["into",["vec"]]],["self"]]],[11,R[111],E,R[112],25,[[["self"],["vec",["cow"]],["into",["vec"]]],["self"]]],[11,"append_up_http_url",E,"追加上传服务器（HTTP 协议）URL",25,[[["self"]],["self"]]],[11,"append_up_https_url",E,"追加上传服务器（HTTPS 协议）URL",25,[[["self"]],["self"]]],[11,"append_io_http_url",E,"追加 IO 服务器（HTTP 协议）URL",25,[[["self"]],["self"]]],[11,"append_io_https_url",E,"追加 IO 服务器（HTTPS 协议）URL",25,[[["self"]],["self"]]],[11,"append_rs_http_url",E,"追加 RS 服务器（HTTP 协议）URL",25,[[["self"]],["self"]]],[11,"append_rs_https_url",E,"追加 RS 服务器（HTTPS 协议）URL",25,[[["self"]],["self"]]],[11,"append_rsf_http_url",E,"追加 RSF 服务器（HTTP 协议）URL",25,[[["self"]],["self"]]],[11,"append_rsf_https_url",E,"追加 RSF 服务器（HTTPS 协议）URL",25,[[["self"]],["self"]]],[11,"append_api_http_url",E,"追加 API 服务器（HTTP 协议）URL",25,[[["self"]],["self"]]],[11,"append_api_https_url",E,"追加 API 服务器（HTTPS 协议）URL",25,[[["self"]],["self"]]],[11,"build",E,"生成区域实例",25,[[["self"]],[R[82]]]],[11,"reset",E,"重置区域生成器",25,[[["self"]],["self"]]],[11,"up_urls_owned",E,"获取上传服务器 URL 列表",24,[[["self"],["bool"]],[["vec",["cow"]],["cow",["str"]]]]],[11,"up_urls_ref",E,"获取上传服务器 URL 引用的列表",24,[[["self"],["bool"]],[["vec",["str"]],["str"]]]],[11,"io_urls_owned",E,"获取 IO 服务器 URL 列表",24,[[["self"],["bool"]],[["vec",["cow"]],["cow",["str"]]]]],[11,"io_urls_ref",E,"获取 IO 服务器 URL 引用的列表",24,[[["self"],["bool"]],[["vec",["str"]],["str"]]]],[11,"rs_urls_owned",E,"获取 RS 服务器 URL 列表",24,[[["self"],["bool"]],[["vec",["cow"]],["cow",["str"]]]]],[11,"rs_urls_ref",E,"获取 RS 服务器 URL 引用的列表",24,[[["self"],["bool"]],[["vec",["str"]],["str"]]]],[11,"rsf_urls_owned",E,"获取 RSF 服务器 URL 列表",24,[[["self"],["bool"]],[["vec",["cow"]],["cow",["str"]]]]],[11,"rsf_urls_ref",E,"获取 RSF 服务器 URL 引用的列表",24,[[["self"],["bool"]],[["vec",["str"]],["str"]]]],[11,"api_urls_owned",E,"获取 API 服务器 URL 列表",24,[[["self"],["bool"]],[["vec",["cow"]],["cow",["str"]]]]],[11,"api_urls_ref",E,"获取 API 服务器 URL 引用的列表",24,[[["self"],["bool"]],[["vec",["str"]],["str"]]]],[11,"z0",E,R[113],24,[[],[R[82]]]],[11,"hua_dong",E,R[113],24,[[],[R[82]]]],[11,"east_china",E,R[113],24,[[],[R[82]]]],[11,"z1",E,R[114],24,[[],[R[82]]]],[11,"hua_bei",E,R[114],24,[[],[R[82]]]],[11,"north_china",E,R[114],24,[[],[R[82]]]],[11,"z2",E,R[115],24,[[],[R[82]]]],[11,"hua_nan",E,R[115],24,[[],[R[82]]]],[11,"south_china",E,R[115],24,[[],[R[82]]]],[11,"na0",E,"获取北美地区公有云区域实例",24,[[],[R[82]]]],[11,"as0",E,"获取东南亚地区公有云区域实例",24,[[],[R[82]]]],[11,"all",E,"获取所有公有云区域实例",24,[[]]],[11,"query",E,"查询七牛服务器，根据存储空间名称获取区域列表",24,[[[R[0]]],[["box"],[R[81],["box"]]]]],[0,"uploader",R[85],"上传模块",N,N],[3,R[202],R[166],"存储空间上传器",N,N],[3,R[201],E,"存储空间上传器生成器",N,N],[3,R[203],E,"文件上传器",N,N],[3,R[205],E,R[17],N,N],[3,R[204],E,"Builder for `UploadLoggerValue`.",N,N],[3,R[206],E,"上传管理器",N,N],[3,R[207],E,"上传策略",N,N],[3,R[208],E,"上传策略生成器",N,N],[3,R[210],E,R[19],N,N],[3,R[209],E,"Builder for `UploadRecorder`.",N,N],[3,R[211],E,"上传响应实例",N,N],[3,R[212],E,"上传凭证",N,N],[4,R[198],E,"上传错误",N,N],[13,"IOError",E,"读取数据发送 IO 错误",26,N],[13,"QiniuError",E,"调用七牛 API 上传时发送错误",26,N],[4,R[199],E,"上传日志文件的锁策略",N,N],[13,"LockSharedDuringAppendingAndLockExclusiveDuringUploading",E,"追加日志时为日志文件加共享锁，而上传时使用排他锁，相较其他策略可以实现安全和性能之间的平衡，因此是默认策略",27,N],[13,"AlwaysLockExclusive",E,"始终使用排他锁保护文件，性能较差",27,N],[13,"None",E,"不使用任何锁保护文件，安全性差。 建议仅在能确保当前操作系统内不会有多个进程同时上传文件时，…",27,N],[4,R[200],E,"创建上传器错误",N,N],[13,R[116],E,R[117],28,N],[13,"QiniuAPIError",E,"七牛 API 调用错误",28,N],[13,"BucketIsMissingInUploadToken",E,"上传凭证中不包含存储空间信息",28,N],[4,R[116],E,R[117],N,N],[13,"InvalidUploadTokenFormat",E,"上传凭证格式错误",29,N],[13,"Base64DecodeError",E,"上传凭证 Base64 解码错误",29,N],[13,"JSONDecodeError",E,"上传凭证 JSON 解析错误",29,N],[11,R[121],E,R[122],30,[[["threadpool"]],[R[118]]]],[11,R[123],E,R[124],30,[[["usize"]],[R[118]]]],[11,"build",E,"生成存储空间上传器",30,[[],[R[176]]]],[11,"upload_token",E,R[130],31,[[["self"]],[R[120]]]],[11,"upload_policy",E,"根据上传策略创建文件上传器生成器",31,[[[R[119]],["self"]],[R[120]]]],[11,R[121],E,R[122],32,[[],[R[120]]]],[11,R[123],E,R[124],32,[[["usize"]],[R[120]]]],[11,"max_concurrency",E,"上传文件最大并发度",32,[[["usize"]],[R[120]]]],[11,"key",E,"指定上传对象的名称",32,[[],[R[120]]]],[11,"var",E,"为上传对象指定自定义变量",32,[[],[R[120]]]],[11,"metadata",E,"为上传对象指定自定义元数据",32,[[],[R[120]]]],[11,"disable_checksum",E,"禁用文件校验",32,[[],[R[120]]]],[11,"enable_checksum",E,"启用文件校验",32,[[],[R[120]]]],[11,R[34],E,"指定分片上传策略阙值",32,[[["u32"]],[R[120]]]],[11,"always_be_resumable",E,"总是使用分片上传",32,[[],[R[120]]]],[11,"never_be_resumable",E,"总是使用表单上传",32,[[],[R[120]]]],[11,"on_progress_ref",E,R[125],32,[[["fn"]],[R[120]]]],[11,"on_progress",E,R[125],32,[[],[R[120]]]],[11,"upload_file",E,"开始上传文件",32,[[[R[2],["mime"]],["mime"]],[R[126]]]],[11,"upload_stream",E,"开始上传文件流",32,[[[R[2],["mime"]],["mime"]],[R[126]]]],[11,R[127],E,"日志文件路径",33,[[["path"],["cow",["path"]]],["self"]]],[11,R[128],E,"日志文件的锁策略",33,[[[R[129]]],["self"]]],[11,R[34],E,"日志文件的上传阙值",33,[[["u32"]],["self"]]],[11,"max_size",E,"日志文件最大尺寸",33,[[["u32"]],["self"]]],[11,R[127],E,"获取日志文件路径",34,[[["self"]],["path"]]],[11,R[128],E,"获取日志文件锁策略",34,[[["self"]],[R[129]]]],[11,R[34],E,"日志文件的阙值",34,[[["self"]],["u32"]]],[11,"max_size",E,"日志文件的最大尺寸",34,[[["self"]],["u32"]]],[11,"build",E,"生成上传日志记录仪",33,[[],[[R[66],[R[3]]],[R[3]]]]],[11,"new",E,"创建新的上传管理器",35,[[[R[0]]],["self"]]],[11,"for_bucket",E,"创建存储空间上传器生成器",35,[[["self"],["bucket"]],[R[118]]]],[11,"for_bucket_name",E,"根据存储空间名称和对应的 Access Key 创建存储空间上传器生成器",35,[[["self"]],[R[118]]]],[11,"for_upload_token",E,R[130],35,[[["self"]],[[R[131],[R[120]]],[R[120]]]]],[11,"for_upload_policy",E,"根据上传策略和认证信息创建文件上传器生成器",35,[[["self"],[R[119]],[R[1]],["cow",[R[1]]]],[[R[131],[R[120]]],[R[120]]]]],[11,"bucket",E,"存储空间约束",36,[[["self"]],[[R[2],["str"]],["str"]]]],[11,"key",E,"对象名称约束或对象名称前缀约束",36,[[["self"]],[[R[2],["str"]],["str"]]]],[11,"use_prefixal_object_key",E,"是否是对象名称前缀约束",36,[[["self"]],["bool"]]],[11,"is_insert_only",E,"是否仅允许新增对象，不允许覆盖对象",36,[[["self"]],["bool"]]],[11,"is_overwritable",E,"是否允许覆盖对象",36,[[["self"]],["bool"]]],[11,"mime_detection_enabled",E,"是否启用 MIME 类型自动检测",36,[[["self"]],["bool"]]],[11,R[134],E,"上传凭证过期时间",36,[[["self"]],[[R[2],[R[132]]],[R[132]]]]],[11,R[133],E,R[31],36,[[["self"]],[[R[4]],[R[2],[R[4]]]]]],[11,R[136],E,R[137],36,[[["self"]],[[R[2],["str"]],["str"]]]],[11,R[138],E,"上传成功后，自定义七牛云最终返回给上传端的数据",36,[[["self"]],[[R[2],["str"]],["str"]]]],[11,"callback_urls",E,"上传成功后，七牛云向业务服务器发送 POST 请求的 URL 列表",36,[[["self"]],[["split",["char"]],[R[2],["split"]]]]],[11,"callback_host",E,"上传成功后，七牛云向业务服务器发送回调请求时的 `Host`",36,[[["self"]],[[R[2],["str"]],["str"]]]],[11,"callback_body",E,"上传成功后，七牛云向业务服务器发送回调请求时的内容",36,[[["self"]],[[R[2],["str"]],["str"]]]],[11,"callback_body_type",E,"上传成功后，七牛云向业务服务器发送回调通知 `callback_body()` 的 `Content-Type`",36,[[["self"]],[[R[2],["str"]],["str"]]]],[11,"save_key",E,R[139],36,[[["self"]],[[R[2],["str"]],["str"]]]],[11,"is_save_key_forced",E,"是否忽略客户端指定的对象名称，强制使用自定义对象名称 `save_key()` 进行文件命名",36,[[["self"]],["bool"]]],[11,R[140],E,R[141],36,[[["self"]]]],[11,R[142],E,R[143],36,[[["self"]],[["split",["char"]],[R[2],["split"]]]]],[11,"is_normal_storage_used",E,"是否会使用标准存储",36,[[["self"]],["bool"]]],[11,"is_infrequent_storage_used",E,"是否会使用低频存储",36,[[["self"]],["bool"]]],[11,R[144],E,R[145],36,[[["self"]],[[R[4]],[R[2],[R[4]]]]]],[11,R[146],E,"对象生命结束时间",36,[[["self"]],[[R[2],[R[132]]],[R[132]]]]],[11,"as_json",E,"获取 JSON 格式的上传凭证",36,[[["self"]],[R[5]]]],[11,"from_json",E,"解析 JSON 格式的上传凭证",36,[[],[[R[81],[R[119]]],[R[119]]]]],[11,"new_policy_for_bucket",E,"为指定的存储空间生成的上传策略",37,[[[R[0]]],["self"]]],[11,"new_policy_for_object",E,"为指定的存储空间和对象名称生成的上传策略",37,[[[R[0]]],["self"]]],[11,"new_policy_for_objects_with_prefix",E,"为指定的存储空间和对象名称前缀生成的上传策略",37,[[[R[0]]],["self"]]],[11,R[133],E,"指定上传凭证有效期",37,[[["self"],[R[4]]],["self"]]],[11,R[134],E,"指定上传凭证过期时间",37,[[["self"],[R[132]]],["self"]]],[11,"insert_only",E,"仅允许创建新的对象，不允许覆盖和修改同名对象",37,[[["self"]],["self"]]],[11,"overwritable",E,"允许覆盖和修改同名对象",37,[[["self"]],[["self"],[R[135]],[R[81],[R[135]]]]]],[11,"enable_mime_detection",E,"启用 MIME 类型自动检测",37,[[["self"]],["self"]]],[11,"disable_mime_detection",E,"禁用 MIME 类型自动检测",37,[[["self"]],["self"]]],[11,"infrequent_storage",E,"使用低频存储",37,[[["self"]],["self"]]],[11,"normal_storage",E,"使用标准存储",37,[[["self"]],["self"]]],[11,R[136],E,R[137],37,[[["self"]],["self"]]],[11,R[138],E,"上传成功后，自定义七牛云最终返回给上传端（在指定 `return_url()` 时是携带在跳转路径参数中）的数据",37,[[["self"]],["self"]]],[11,"callback",E,"上传成功后，七牛云向业务服务器发送 POST 请求的 URL 列表，`Host`，回调请求的内容以及其…",37,[[["self"]],["self"]]],[11,"save_as",E,R[139],37,[[["self"],["bool"]],["self"]]],[11,R[140],E,R[141],37,[[["self"]],["self"]]],[11,R[142],E,R[143],37,[[["self"]],["self"]]],[11,R[144],E,R[145],37,[[["self"],[R[4]]],["self"]]],[11,R[146],E,"对象的生命到期时间",37,[[["self"],[R[132]]],["self"]]],[11,"build",E,"生成上传策略",37,[[["self"]],[R[119]]]],[11,"reset",E,"重置上传策略生成器",37,[[["self"]]]],[11,R[89],E,"设置记录仪",38,[[["self"],[R[89]],["arc",[R[89]]]],["self"]]],[11,"id_generator",E,"记录仪 ID 生成器",38,[[["self"]],["self"]]],[11,R[147],E,"文件分块有效期",38,[[["self"],[R[4]]],["self"]]],[11,R[148],E,"始终刷新",38,[[["self"],["bool"]],["self"]]],[11,"build",E,E,38,[[["self"]],[R[20]]]],[11,R[89],E,"获取记录仪的引用",39,[[["self"]],[R[89]]]],[11,R[147],E,"获取文件分块的有效期",39,[[["self"]],[R[4]]]],[11,R[148],E,"是否总是刷新",39,[[["self"]],["bool"]]],[11,"key",E,"当响应体为 JSON 时，且 JSON 体包含一个 `key` 属性，且属性值会字符串类型时，则返回该属性值",40,[[["self"]],[[R[2],["str"]],["str"]]]],[11,"hash",E,"当响应体为 JSON 时，且 JSON 体包含一个 `hash` 属性，且属性值会字符串类型时，则返回该属性值",40,[[["self"]],[[R[2],["str"]],["str"]]]],[11,"is_json_value",E,"当响应体为 JSON 时，返回 true",40,[[["self"]],["bool"]]],[11,"as_json_value",E,R[149],40,[[["self"]],[["value"],[R[2],["value"]]]]],[11,"into_json_value",E,R[149],40,[[],[["value"],[R[2],["value"]]]]],[11,"get",E,"当响应体为 JSON 时，且指定的属性存在时，则返回该属性对应的值",40,[[["self"],["index"]],[["value"],[R[2],["value"]]]]],[11,"is_object",E,"当响应体为 JSON 时，且指定的属性存在，值为对象时，则返回 `true`",40,[[["self"]],["bool"]]],[11,"as_object",E,"当响应体为 JSON 时，且指定的属性存在，值为对象时，则返回属性值",40,[[["self"]],[["map"],[R[2],["map"]]]]],[11,"is_array",E,"当响应体为 JSON 时，且指定的属性存在，值为数组时，则返回 `true`",40,[[["self"]],["bool"]]],[11,"as_array",E,"当响应体为 JSON 时，且指定的属性存在，值为数组时，则返回属性值",40,[[["self"]],[[R[2],["vec"]],["vec"]]]],[11,"is_string",E,"当响应体为 JSON 时，且指定的属性存在，值为字符串时，则返回 `true`",40,[[["self"]],["bool"]]],[11,"as_str",E,"当响应体为 JSON 时，且指定的属性存在，值为字符串时，则返回属性值",40,[[["self"]],[[R[2],["str"]],["str"]]]],[11,"is_number",E,"当响应体为 JSON 时，且指定的属性存在，值为数字时，则返回 `true`",40,[[["self"]],["bool"]]],[11,"is_i64",E,"当响应体为 JSON 时，且指定的属性存在，值为合法的 64 位带符号整型时，则返回 `true`",40,[[["self"]],["bool"]]],[11,"is_u64",E,"当响应体为 JSON 时，且指定的属性存在，值为合法的 64 位无符号整型时，则返回 `true`",40,[[["self"]],["bool"]]],[11,"is_f64",E,"当响应体为 JSON 时，且指定的属性存在，值为合法的 64 位浮点型时，则返回 `true`",40,[[["self"]],["bool"]]],[11,"as_i64",E,"当响应体为 JSON 时，且指定的属性存在，值为合法的 64 位带符号整型时，则返回属性值",40,[[["self"]],[["i64"],[R[2],["i64"]]]]],[11,"as_u64",E,"当响应体为 JSON 时，且指定的属性存在，值为合法的 64 位无符号整型时，则返回属性值",40,[[["self"]],[[R[2],["u64"]],["u64"]]]],[11,"as_f64",E,"当响应体为 JSON 时，且指定的属性存在，值为合法的 64 位浮点型时，则返回属性值",40,[[["self"]],[[R[2],["f64"]],["f64"]]]],[11,"is_boolean",E,"当响应体为 JSON 时，且指定的属性存在，值为布尔型时，则返回 `true`",40,[[["self"]],["bool"]]],[11,"as_bool",E,"当响应体为 JSON 时，且指定的属性存在，值为布尔型时，则返回属性值",40,[[["self"]],[[R[2],["bool"]],["bool"]]]],[11,"is_null",E,"当响应体为 JSON 时，且指定的属性存在，值为 `NULL` 时，则返回 `true`",40,[[["self"]],["bool"]]],[11,"as_null",E,"当响应体为 JSON 时，且指定的属性存在，值为 `NULL` 时，则返回 `Ok(())`",40,[[["self"]],[R[2]]]],[11,"to_bytes",E,R[150],40,[[["self"]],[["vec",["u8"]],["u8"]]]],[11,"into_bytes",E,R[150],40,[[],[["vec",["u8"]],["u8"]]]],[11,"new",E,"根据上传策略创建新的上传凭证",41,[[[R[119]]],["self"]]],[11,R[151],E,"解析上传凭证，获取 `Access Key`",41,[[["self"]],[[R[152],["str"]],["str"]]]],[11,"policy",E,"解析上传凭证，获取上传策略",41,[[["self"]],[[R[152],["cow"]],["cow",[R[119]]]]]],[6,"UploadResult",E,"上传结果",N,N],[6,"CreateUploaderResult",E,"创建上传器结果",N,N],[6,"UploadTokenParseResult",E,"上传凭证解析结果",N,N],[0,"utils",R[57],"实用模块",N,N],[0,"etag",R[153],"七牛 Etag 计算库",N,N],[3,"Etag",R[167],"七牛 Etag 计算器",N,N],[3,"Reader",E,"一个 Etag 读取器",N,N],[5,"new",E,"创建一个 Etag 计算器",N,[[],["etag"]]],[5,"new_reader",E,"创建一个 Etag 读取器",N,[[["read"]],[["read"],["reader"]]]],[5,"from",E,"读取输入流并计算 Etag",N,[[["read"]],[[R[5]],[R[81],[R[5]]]]]],[5,"from_bytes",E,"根据给出的数据计算 Etag",N,[[["asref"]],[R[5]]]],[5,"from_file",E,"根据给出的文件内容计算 Etag",N,[[["asref",["path"]],["path"]],[[R[5]],[R[81],[R[5]]]]]],[17,"ETAG_SIZE",E,"Etag 字符串固定长度",N,N],[11,"etag",E,"获取 Etag",42,[[["self"]],[[R[2],["str"]],["str"]]]],[11,"into_etag",E,"获取 Etag，并销毁自身",42,[[],[[R[5]],[R[2],[R[5]]]]]],[0,R[121],R[153],"七牛 Rust SDK 内置全局线程池",N,N],[5,"recreate_thread_pool","qiniu_ng::utils::thread_pool","重建线程池",N,[[["usize"]]]],[11,"from",R[57],E,0,[[[T]],[T]]],[11,R[159],E,E,0,[[["self"]],[T]]],[11,R[154],E,E,0,[[["self"],[T]]]],[11,"into",E,E,0,[[],[U]]],[11,R[157],E,E,0,[[[U]],[R[81]]]],[11,R[158],E,E,0,[[],[R[81]]]],[11,R[155],E,E,0,[[["self"]],[T]]],[11,"borrow",E,E,0,[[["self"]],[T]]],[11,R[160],E,E,0,[[["self"]],["typeid"]]],[11,"vzip",E,E,0,[[],["v"]]],[11,"tap",E,E,0,[[["f"]],[T]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[159],E,E,1,[[["self"]],[T]]],[11,R[154],E,E,1,[[["self"],[T]]]],[11,"into",E,E,1,[[],[U]]],[11,R[157],E,E,1,[[[U]],[R[81]]]],[11,R[158],E,E,1,[[],[R[81]]]],[11,R[155],E,E,1,[[["self"]],[T]]],[11,"borrow",E,E,1,[[["self"]],[T]]],[11,R[160],E,E,1,[[["self"]],["typeid"]]],[11,"vzip",E,E,1,[[],["v"]]],[11,"tap",E,E,1,[[["f"]],[T]]],[11,"from",R[156],E,3,[[[T]],[T]]],[11,"into",E,E,3,[[],[U]]],[11,R[157],E,E,3,[[[U]],[R[81]]]],[11,R[158],E,E,3,[[],[R[81]]]],[11,R[155],E,E,3,[[["self"]],[T]]],[11,"borrow",E,E,3,[[["self"]],[T]]],[11,R[160],E,E,3,[[["self"]],["typeid"]]],[11,"vzip",E,E,3,[[],["v"]]],[11,"tap",E,E,3,[[["f"]],[T]]],[11,"from",E,E,2,[[[T]],[T]]],[11,"into",E,E,2,[[],[U]]],[11,R[157],E,E,2,[[[U]],[R[81]]]],[11,R[158],E,E,2,[[],[R[81]]]],[11,R[155],E,E,2,[[["self"]],[T]]],[11,"borrow",E,E,2,[[["self"]],[T]]],[11,R[160],E,E,2,[[["self"]],["typeid"]]],[11,"vzip",E,E,2,[[],["v"]]],[11,"tap",E,E,2,[[["f"]],[T]]],[11,"from",E,E,43,[[[T]],[T]]],[11,R[159],E,E,43,[[["self"]],[T]]],[11,R[154],E,E,43,[[["self"],[T]]]],[11,"into",E,E,43,[[],[U]]],[11,R[157],E,E,43,[[[U]],[R[81]]]],[11,R[158],E,E,43,[[],[R[81]]]],[11,R[155],E,E,43,[[["self"]],[T]]],[11,"borrow",E,E,43,[[["self"]],[T]]],[11,R[160],E,E,43,[[["self"]],["typeid"]]],[11,"vzip",E,E,43,[[],["v"]]],[11,"tap",E,E,43,[[["f"]],[T]]],[11,"from",R[79],E,44,[[[T]],[T]]],[11,R[161],E,E,44,[[["self"]],[R[5]]]],[11,"into",E,E,44,[[],[U]]],[11,R[157],E,E,44,[[[U]],[R[81]]]],[11,R[158],E,E,44,[[],[R[81]]]],[11,R[155],E,E,44,[[["self"]],[T]]],[11,"borrow",E,E,44,[[["self"]],[T]]],[11,R[160],E,E,44,[[["self"]],["typeid"]]],[11,"vzip",E,E,44,[[],["v"]]],[11,"tap",E,E,44,[[["f"]],[T]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[161],E,E,4,[[["self"]],[R[5]]]],[11,"into",E,E,4,[[],[U]]],[11,R[157],E,E,4,[[[U]],[R[81]]]],[11,R[158],E,E,4,[[],[R[81]]]],[11,R[155],E,E,4,[[["self"]],[T]]],[11,"borrow",E,E,4,[[["self"]],[T]]],[11,R[160],E,E,4,[[["self"]],["typeid"]]],[11,"vzip",E,E,4,[[],["v"]]],[11,"tap",E,E,4,[[["f"]],[T]]],[11,"from",E,E,6,[[[T]],[T]]],[11,R[159],E,E,6,[[["self"]],[T]]],[11,R[154],E,E,6,[[["self"],[T]]]],[11,"into",E,E,6,[[],[U]]],[11,R[157],E,E,6,[[[U]],[R[81]]]],[11,R[158],E,E,6,[[],[R[81]]]],[11,R[155],E,E,6,[[["self"]],[T]]],[11,"borrow",E,E,6,[[["self"]],[T]]],[11,R[160],E,E,6,[[["self"]],["typeid"]]],[11,"vzip",E,E,6,[[],["v"]]],[11,"tap",E,E,6,[[["f"]],[T]]],[11,"from",E,E,45,[[[T]],[T]]],[11,R[161],E,E,45,[[["self"]],[R[5]]]],[11,R[159],E,E,45,[[["self"]],[T]]],[11,R[154],E,E,45,[[["self"],[T]]]],[11,"into",E,E,45,[[],[U]]],[11,R[157],E,E,45,[[[U]],[R[81]]]],[11,R[158],E,E,45,[[],[R[81]]]],[11,R[155],E,E,45,[[["self"]],[T]]],[11,"borrow",E,E,45,[[["self"]],[T]]],[11,R[160],E,E,45,[[["self"]],["typeid"]]],[11,"vzip",E,E,45,[[],["v"]]],[11,"tap",E,E,45,[[["f"]],[T]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[161],E,E,7,[[["self"]],[R[5]]]],[11,R[159],E,E,7,[[["self"]],[T]]],[11,R[154],E,E,7,[[["self"],[T]]]],[11,"into",E,E,7,[[],[U]]],[11,R[157],E,E,7,[[[U]],[R[81]]]],[11,R[158],E,E,7,[[],[R[81]]]],[11,R[155],E,E,7,[[["self"]],[T]]],[11,"borrow",E,E,7,[[["self"]],[T]]],[11,R[160],E,E,7,[[["self"]],["typeid"]]],[11,"vzip",E,E,7,[[],["v"]]],[11,"tap",E,E,7,[[["f"]],[T]]],[11,"from",E,E,8,[[[T]],[T]]],[11,R[159],E,E,8,[[["self"]],[T]]],[11,R[154],E,E,8,[[["self"],[T]]]],[11,"into",E,E,8,[[],[U]]],[11,R[157],E,E,8,[[[U]],[R[81]]]],[11,R[158],E,E,8,[[],[R[81]]]],[11,R[155],E,E,8,[[["self"]],[T]]],[11,"borrow",E,E,8,[[["self"]],[T]]],[11,R[160],E,E,8,[[["self"]],["typeid"]]],[11,"vzip",E,E,8,[[],["v"]]],[11,"tap",E,E,8,[[["f"]],[T]]],[11,"from",R[61],E,13,[[[T]],[T]]],[11,"into",E,E,13,[[],[U]]],[11,R[157],E,E,13,[[[U]],[R[81]]]],[11,R[158],E,E,13,[[],[R[81]]]],[11,R[155],E,E,13,[[["self"]],[T]]],[11,"borrow",E,E,13,[[["self"]],[T]]],[11,R[160],E,E,13,[[["self"]],["typeid"]]],[11,"vzip",E,E,13,[[],["v"]]],[11,"tap",E,E,13,[[["f"]],[T]]],[11,"from",E,E,14,[[[T]],[T]]],[11,R[159],E,E,14,[[["self"]],[T]]],[11,R[154],E,E,14,[[["self"],[T]]]],[11,"into",E,E,14,[[],[U]]],[11,R[157],E,E,14,[[[U]],[R[81]]]],[11,R[158],E,E,14,[[],[R[81]]]],[11,R[155],E,E,14,[[["self"]],[T]]],[11,"borrow",E,E,14,[[["self"]],[T]]],[11,R[160],E,E,14,[[["self"]],["typeid"]]],[11,"vzip",E,E,14,[[],["v"]]],[11,"tap",E,E,14,[[["f"]],[T]]],[11,"from",E,E,9,[[[T]],[T]]],[11,R[159],E,E,9,[[["self"]],[T]]],[11,R[154],E,E,9,[[["self"],[T]]]],[11,"into",E,E,9,[[],[U]]],[11,R[157],E,E,9,[[[U]],[R[81]]]],[11,R[158],E,E,9,[[],[R[81]]]],[11,R[155],E,E,9,[[["self"]],[T]]],[11,"borrow",E,E,9,[[["self"]],[T]]],[11,R[160],E,E,9,[[["self"]],["typeid"]]],[11,"vzip",E,E,9,[[],["v"]]],[11,"tap",E,E,9,[[["f"]],[T]]],[11,"from",E,E,10,[[[T]],[T]]],[11,R[161],E,E,10,[[["self"]],[R[5]]]],[11,"into",E,E,10,[[],[U]]],[11,R[157],E,E,10,[[[U]],[R[81]]]],[11,R[158],E,E,10,[[],[R[81]]]],[11,R[155],E,E,10,[[["self"]],[T]]],[11,"borrow",E,E,10,[[["self"]],[T]]],[11,R[160],E,E,10,[[["self"]],["typeid"]]],[11,"vzip",E,E,10,[[],["v"]]],[11,"tap",E,E,10,[[["f"]],[T]]],[11,"from",E,E,11,[[[T]],[T]]],[11,R[161],E,E,11,[[["self"]],[R[5]]]],[11,"into",E,E,11,[[],[U]]],[11,R[157],E,E,11,[[[U]],[R[81]]]],[11,R[158],E,E,11,[[],[R[81]]]],[11,R[155],E,E,11,[[["self"]],[T]]],[11,"borrow",E,E,11,[[["self"]],[T]]],[11,R[160],E,E,11,[[["self"]],["typeid"]]],[11,"vzip",E,E,11,[[],["v"]]],[11,"tap",E,E,11,[[["f"]],[T]]],[11,"from",E,E,12,[[[T]],[T]]],[11,R[161],E,E,12,[[["self"]],[R[5]]]],[11,"into",E,E,12,[[],[U]]],[11,R[157],E,E,12,[[[U]],[R[81]]]],[11,R[158],E,E,12,[[],[R[81]]]],[11,R[155],E,E,12,[[["self"]],[T]]],[11,"borrow",E,E,12,[[["self"]],[T]]],[11,R[160],E,E,12,[[["self"]],["typeid"]]],[11,"vzip",E,E,12,[[],["v"]]],[11,"tap",E,E,12,[[["f"]],[T]]],[11,"from",R[162],E,18,[[[T]],[T]]],[11,"into",E,E,18,[[],[U]]],[11,R[157],E,E,18,[[[U]],[R[81]]]],[11,R[158],E,E,18,[[],[R[81]]]],[11,R[155],E,E,18,[[["self"]],[T]]],[11,"borrow",E,E,18,[[["self"]],[T]]],[11,R[160],E,E,18,[[["self"]],["typeid"]]],[11,"vzip",E,E,18,[[],["v"]]],[11,"tap",E,E,18,[[["f"]],[T]]],[11,"from",E,E,17,[[[T]],[T]]],[11,"into",E,E,17,[[],[U]]],[11,R[157],E,E,17,[[[U]],[R[81]]]],[11,R[158],E,E,17,[[],[R[81]]]],[11,R[155],E,E,17,[[["self"]],[T]]],[11,"borrow",E,E,17,[[["self"]],[T]]],[11,R[160],E,E,17,[[["self"]],["typeid"]]],[11,"vzip",E,E,17,[[],["v"]]],[11,"tap",E,E,17,[[["f"]],[T]]],[11,"from",E,E,46,[[[T]],[T]]],[11,"into_iter",E,E,46,[[],["i"]]],[11,"into",E,E,46,[[],[U]]],[11,R[157],E,E,46,[[[U]],[R[81]]]],[11,R[158],E,E,46,[[],[R[81]]]],[11,R[155],E,E,46,[[["self"]],[T]]],[11,"borrow",E,E,46,[[["self"]],[T]]],[11,R[160],E,E,46,[[["self"]],["typeid"]]],[11,"vzip",E,E,46,[[],["v"]]],[11,"tap",E,E,46,[[["f"]],[T]]],[11,"par_bridge",E,E,46,[[],["iterbridge"]]],[11,"from",R[163],E,20,[[[T]],[T]]],[11,R[159],E,E,20,[[["self"]],[T]]],[11,R[154],E,E,20,[[["self"],[T]]]],[11,"into",E,E,20,[[],[U]]],[11,R[157],E,E,20,[[[U]],[R[81]]]],[11,R[158],E,E,20,[[],[R[81]]]],[11,R[155],E,E,20,[[["self"]],[T]]],[11,"borrow",E,E,20,[[["self"]],[T]]],[11,R[160],E,E,20,[[["self"]],["typeid"]]],[11,"vzip",E,E,20,[[],["v"]]],[11,"tap",E,E,20,[[["f"]],[T]]],[11,"from",E,E,19,[[[T]],[T]]],[11,R[161],E,E,19,[[["self"]],[R[5]]]],[11,"into",E,E,19,[[],[U]]],[11,R[157],E,E,19,[[[U]],[R[81]]]],[11,R[158],E,E,19,[[],[R[81]]]],[11,R[155],E,E,19,[[["self"]],[T]]],[11,"borrow",E,E,19,[[["self"]],[T]]],[11,R[160],E,E,19,[[["self"]],["typeid"]]],[11,"vzip",E,E,19,[[],["v"]]],[11,"tap",E,E,19,[[["f"]],[T]]],[11,"from",R[164],E,22,[[[T]],[T]]],[11,R[159],E,E,22,[[["self"]],[T]]],[11,R[154],E,E,22,[[["self"],[T]]]],[11,"into",E,E,22,[[],[U]]],[11,R[157],E,E,22,[[[U]],[R[81]]]],[11,R[158],E,E,22,[[],[R[81]]]],[11,R[155],E,E,22,[[["self"]],[T]]],[11,"borrow",E,E,22,[[["self"]],[T]]],[11,R[160],E,E,22,[[["self"]],["typeid"]]],[11,"vzip",E,E,22,[[],["v"]]],[11,"tap",E,E,22,[[["f"]],[T]]],[11,"from",R[165],E,24,[[[T]],[T]]],[11,R[159],E,E,24,[[["self"]],[T]]],[11,R[154],E,E,24,[[["self"],[T]]]],[11,"into",E,E,24,[[],[U]]],[11,R[157],E,E,24,[[[U]],[R[81]]]],[11,R[158],E,E,24,[[],[R[81]]]],[11,R[155],E,E,24,[[["self"]],[T]]],[11,"borrow",E,E,24,[[["self"]],[T]]],[11,R[160],E,E,24,[[["self"]],["typeid"]]],[11,"vzip",E,E,24,[[],["v"]]],[11,"tap",E,E,24,[[["f"]],[T]]],[11,"from",E,E,25,[[[T]],[T]]],[11,R[159],E,E,25,[[["self"]],[T]]],[11,R[154],E,E,25,[[["self"],[T]]]],[11,"into",E,E,25,[[],[U]]],[11,R[157],E,E,25,[[[U]],[R[81]]]],[11,R[158],E,E,25,[[],[R[81]]]],[11,R[155],E,E,25,[[["self"]],[T]]],[11,"borrow",E,E,25,[[["self"]],[T]]],[11,R[160],E,E,25,[[["self"]],["typeid"]]],[11,"vzip",E,E,25,[[],["v"]]],[11,"tap",E,E,25,[[["f"]],[T]]],[11,"from",E,E,23,[[[T]],[T]]],[11,R[159],E,E,23,[[["self"]],[T]]],[11,R[154],E,E,23,[[["self"],[T]]]],[11,"into",E,E,23,[[],[U]]],[11,R[157],E,E,23,[[[U]],[R[81]]]],[11,R[158],E,E,23,[[],[R[81]]]],[11,R[155],E,E,23,[[["self"]],[T]]],[11,"borrow",E,E,23,[[["self"]],[T]]],[11,R[160],E,E,23,[[["self"]],["typeid"]]],[11,"vzip",E,E,23,[[],["v"]]],[11,"tap",E,E,23,[[["f"]],[T]]],[11,"from",R[166],E,31,[[[T]],[T]]],[11,R[159],E,E,31,[[["self"]],[T]]],[11,R[154],E,E,31,[[["self"],[T]]]],[11,"into",E,E,31,[[],[U]]],[11,R[157],E,E,31,[[[U]],[R[81]]]],[11,R[158],E,E,31,[[],[R[81]]]],[11,R[155],E,E,31,[[["self"]],[T]]],[11,"borrow",E,E,31,[[["self"]],[T]]],[11,R[160],E,E,31,[[["self"]],["typeid"]]],[11,"vzip",E,E,31,[[],["v"]]],[11,"tap",E,E,31,[[["f"]],[T]]],[11,"from",E,E,30,[[[T]],[T]]],[11,"into",E,E,30,[[],[U]]],[11,R[157],E,E,30,[[[U]],[R[81]]]],[11,R[158],E,E,30,[[],[R[81]]]],[11,R[155],E,E,30,[[["self"]],[T]]],[11,"borrow",E,E,30,[[["self"]],[T]]],[11,R[160],E,E,30,[[["self"]],["typeid"]]],[11,"vzip",E,E,30,[[],["v"]]],[11,"tap",E,E,30,[[["f"]],[T]]],[11,"from",E,E,32,[[[T]],[T]]],[11,"into",E,E,32,[[],[U]]],[11,R[157],E,E,32,[[[U]],[R[81]]]],[11,R[158],E,E,32,[[],[R[81]]]],[11,R[155],E,E,32,[[["self"]],[T]]],[11,"borrow",E,E,32,[[["self"]],[T]]],[11,R[160],E,E,32,[[["self"]],["typeid"]]],[11,"vzip",E,E,32,[[],["v"]]],[11,"tap",E,E,32,[[["f"]],[T]]],[11,"from",E,E,34,[[[T]],[T]]],[11,R[159],E,E,34,[[["self"]],[T]]],[11,R[154],E,E,34,[[["self"],[T]]]],[11,"into",E,E,34,[[],[U]]],[11,R[157],E,E,34,[[[U]],[R[81]]]],[11,R[158],E,E,34,[[],[R[81]]]],[11,R[155],E,E,34,[[["self"]],[T]]],[11,"borrow",E,E,34,[[["self"]],[T]]],[11,R[160],E,E,34,[[["self"]],["typeid"]]],[11,"vzip",E,E,34,[[],["v"]]],[11,"tap",E,E,34,[[["f"]],[T]]],[11,"from",E,E,33,[[[T]],[T]]],[11,"into",E,E,33,[[],[U]]],[11,R[157],E,E,33,[[[U]],[R[81]]]],[11,R[158],E,E,33,[[],[R[81]]]],[11,R[155],E,E,33,[[["self"]],[T]]],[11,"borrow",E,E,33,[[["self"]],[T]]],[11,R[160],E,E,33,[[["self"]],["typeid"]]],[11,"vzip",E,E,33,[[],["v"]]],[11,"tap",E,E,33,[[["f"]],[T]]],[11,"from",E,E,35,[[[T]],[T]]],[11,R[159],E,E,35,[[["self"]],[T]]],[11,R[154],E,E,35,[[["self"],[T]]]],[11,"into",E,E,35,[[],[U]]],[11,R[157],E,E,35,[[[U]],[R[81]]]],[11,R[158],E,E,35,[[],[R[81]]]],[11,R[155],E,E,35,[[["self"]],[T]]],[11,"borrow",E,E,35,[[["self"]],[T]]],[11,R[160],E,E,35,[[["self"]],["typeid"]]],[11,"vzip",E,E,35,[[],["v"]]],[11,"tap",E,E,35,[[["f"]],[T]]],[11,"from",E,E,36,[[[T]],[T]]],[11,R[159],E,E,36,[[["self"]],[T]]],[11,R[154],E,E,36,[[["self"],[T]]]],[11,"into",E,E,36,[[],[U]]],[11,R[157],E,E,36,[[[U]],[R[81]]]],[11,R[158],E,E,36,[[],[R[81]]]],[11,R[155],E,E,36,[[["self"]],[T]]],[11,"borrow",E,E,36,[[["self"]],[T]]],[11,R[160],E,E,36,[[["self"]],["typeid"]]],[11,"vzip",E,E,36,[[],["v"]]],[11,"tap",E,E,36,[[["f"]],[T]]],[11,"from",E,E,37,[[[T]],[T]]],[11,R[159],E,E,37,[[["self"]],[T]]],[11,R[154],E,E,37,[[["self"],[T]]]],[11,"into",E,E,37,[[],[U]]],[11,R[157],E,E,37,[[[U]],[R[81]]]],[11,R[158],E,E,37,[[],[R[81]]]],[11,R[155],E,E,37,[[["self"]],[T]]],[11,"borrow",E,E,37,[[["self"]],[T]]],[11,R[160],E,E,37,[[["self"]],["typeid"]]],[11,"vzip",E,E,37,[[],["v"]]],[11,"tap",E,E,37,[[["f"]],[T]]],[11,"from",E,E,39,[[[T]],[T]]],[11,R[159],E,E,39,[[["self"]],[T]]],[11,R[154],E,E,39,[[["self"],[T]]]],[11,"into",E,E,39,[[],[U]]],[11,R[157],E,E,39,[[[U]],[R[81]]]],[11,R[158],E,E,39,[[],[R[81]]]],[11,R[155],E,E,39,[[["self"]],[T]]],[11,"borrow",E,E,39,[[["self"]],[T]]],[11,R[160],E,E,39,[[["self"]],["typeid"]]],[11,"vzip",E,E,39,[[],["v"]]],[11,"tap",E,E,39,[[["f"]],[T]]],[11,"from",E,E,38,[[[T]],[T]]],[11,R[159],E,E,38,[[["self"]],[T]]],[11,R[154],E,E,38,[[["self"],[T]]]],[11,"into",E,E,38,[[],[U]]],[11,R[157],E,E,38,[[[U]],[R[81]]]],[11,R[158],E,E,38,[[],[R[81]]]],[11,R[155],E,E,38,[[["self"]],[T]]],[11,"borrow",E,E,38,[[["self"]],[T]]],[11,R[160],E,E,38,[[["self"]],["typeid"]]],[11,"vzip",E,E,38,[[],["v"]]],[11,"tap",E,E,38,[[["f"]],[T]]],[11,"from",E,E,40,[[[T]],[T]]],[11,R[161],E,E,40,[[["self"]],[R[5]]]],[11,R[159],E,E,40,[[["self"]],[T]]],[11,R[154],E,E,40,[[["self"],[T]]]],[11,"into",E,E,40,[[],[U]]],[11,R[157],E,E,40,[[[U]],[R[81]]]],[11,R[158],E,E,40,[[],[R[81]]]],[11,R[155],E,E,40,[[["self"]],[T]]],[11,"borrow",E,E,40,[[["self"]],[T]]],[11,R[160],E,E,40,[[["self"]],["typeid"]]],[11,"vzip",E,E,40,[[],["v"]]],[11,"tap",E,E,40,[[["f"]],[T]]],[11,"from",E,E,41,[[[T]],[T]]],[11,R[161],E,E,41,[[["self"]],[R[5]]]],[11,R[159],E,E,41,[[["self"]],[T]]],[11,R[154],E,E,41,[[["self"],[T]]]],[11,"into",E,E,41,[[],[U]]],[11,R[157],E,E,41,[[[U]],[R[81]]]],[11,R[158],E,E,41,[[],[R[81]]]],[11,R[155],E,E,41,[[["self"]],[T]]],[11,"borrow",E,E,41,[[["self"]],[T]]],[11,R[160],E,E,41,[[["self"]],["typeid"]]],[11,"vzip",E,E,41,[[],["v"]]],[11,"tap",E,E,41,[[["f"]],[T]]],[11,"from",E,E,26,[[[T]],[T]]],[11,R[161],E,E,26,[[["self"]],[R[5]]]],[11,"into",E,E,26,[[],[U]]],[11,R[157],E,E,26,[[[U]],[R[81]]]],[11,R[158],E,E,26,[[],[R[81]]]],[11,R[155],E,E,26,[[["self"]],[T]]],[11,"borrow",E,E,26,[[["self"]],[T]]],[11,R[160],E,E,26,[[["self"]],["typeid"]]],[11,"vzip",E,E,26,[[],["v"]]],[11,"tap",E,E,26,[[["f"]],[T]]],[11,"from",E,E,27,[[[T]],[T]]],[11,R[159],E,E,27,[[["self"]],[T]]],[11,R[154],E,E,27,[[["self"],[T]]]],[11,"into",E,E,27,[[],[U]]],[11,R[157],E,E,27,[[[U]],[R[81]]]],[11,R[158],E,E,27,[[],[R[81]]]],[11,R[155],E,E,27,[[["self"]],[T]]],[11,"borrow",E,E,27,[[["self"]],[T]]],[11,R[160],E,E,27,[[["self"]],["typeid"]]],[11,"vzip",E,E,27,[[],["v"]]],[11,"tap",E,E,27,[[["f"]],[T]]],[11,"from",E,E,28,[[[T]],[T]]],[11,R[161],E,E,28,[[["self"]],[R[5]]]],[11,"into",E,E,28,[[],[U]]],[11,R[157],E,E,28,[[[U]],[R[81]]]],[11,R[158],E,E,28,[[],[R[81]]]],[11,R[155],E,E,28,[[["self"]],[T]]],[11,"borrow",E,E,28,[[["self"]],[T]]],[11,R[160],E,E,28,[[["self"]],["typeid"]]],[11,"vzip",E,E,28,[[],["v"]]],[11,"tap",E,E,28,[[["f"]],[T]]],[11,"from",E,E,29,[[[T]],[T]]],[11,R[161],E,E,29,[[["self"]],[R[5]]]],[11,"into",E,E,29,[[],[U]]],[11,R[157],E,E,29,[[[U]],[R[81]]]],[11,R[158],E,E,29,[[],[R[81]]]],[11,R[155],E,E,29,[[["self"]],[T]]],[11,"borrow",E,E,29,[[["self"]],[T]]],[11,R[160],E,E,29,[[["self"]],["typeid"]]],[11,"vzip",E,E,29,[[],["v"]]],[11,"tap",E,E,29,[[["f"]],[T]]],[11,"from",R[167],E,47,[[[T]],[T]]],[11,"into",E,E,47,[[],[U]]],[11,R[157],E,E,47,[[[U]],[R[81]]]],[11,R[158],E,E,47,[[],[R[81]]]],[11,R[155],E,E,47,[[["self"]],[T]]],[11,"borrow",E,E,47,[[["self"]],[T]]],[11,R[160],E,E,47,[[["self"]],["typeid"]]],[11,"vzip",E,E,47,[[],["v"]]],[11,"tap",E,E,47,[[["f"]],[T]]],[11,"from",E,E,42,[[[T]],[T]]],[11,"into",E,E,42,[[],[U]]],[11,R[157],E,E,42,[[[U]],[R[81]]]],[11,R[158],E,E,42,[[],[R[81]]]],[11,R[155],E,E,42,[[["self"]],[T]]],[11,"borrow",E,E,42,[[["self"]],[T]]],[11,R[160],E,E,42,[[["self"]],["typeid"]]],[11,"vzip",E,E,42,[[],["v"]]],[11,"tap",E,E,42,[[["f"]],[T]]],[11,"clone",R[79],E,6,[[["self"]],[R[180]]]],[11,"clone",E,E,45,[[["self"]],[R[169]]]],[11,"clone",E,E,7,[[["self"]],["method"]]],[11,"clone",E,E,8,[[["self"]],[R[170]]]],[11,"description",E,E,44,[[["self"]],["str"]]],[11,"cause",E,E,44,[[["self"]],[[R[2],["error"]],["error"]]]],[11,"source",E,E,44,[[["self"]],[["error"],[R[2],["error"]]]]],[11,R[157],E,E,7,[[["str"]],[[R[81],["method"]],["method"]]]],[11,R[157],E,E,7,[[],[[R[81],["method"]],["method"]]]],[11,"fmt",E,E,45,[[["self"],[R[168]]],[[R[81],["error"]],["error"]]]],[11,"fmt",E,E,44,[[["self"],[R[168]]],[[R[81],["error"]],["error"]]]],[11,"fmt",E,E,4,[[["self"],[R[168]]],[[R[81],["error"]],["error"]]]],[11,"fmt",E,E,6,[[["self"],[R[168]]],[[R[81],["error"]],["error"]]]],[11,"fmt",E,E,8,[[["self"],[R[168]]],[[R[81],["error"]],["error"]]]],[11,"fmt",E,E,7,[[["self"],[R[168]]],[[R[81],["error"]],["error"]]]],[11,"fmt",E,E,44,[[["self"],[R[168]]],[[R[81],["error"]],["error"]]]],[11,"fmt",E,E,45,[[["self"],[R[168]]],[[R[81],["error"]],["error"]]]],[11,"fmt",E,E,7,[[["self"],[R[168]]],[[R[81],["error"]],["error"]]]],[11,"fmt",E,E,4,[[["self"],[R[168]]],[[R[81],["error"]],["error"]]]],[11,"hash",E,E,45,[[["self"],["h"]]]],[11,"deref",E,E,45,[[["self"]]]],[11,R[173],E,E,7,[[],["method"]]],[11,"from",E,E,45,[[["str"]],[R[169]]]],[11,"from",E,E,7,[[["method"]],["method"]]],[11,"from",E,E,45,[[["str"],["cow",["str"]]],[R[169]]]],[11,"from",E,E,45,[[[R[5]]],[R[169]]]],[11,"as_ref",E,E,45,[[["self"]],["str"]]],[11,"as_ref",E,E,7,[[["self"]],["str"]]],[11,"from_str",E,E,7,[[["str"]],[[R[81],["method"]],["method"]]]],[11,"eq",E,E,7,[[["self"],["method"]],["bool"]]],[11,"eq",E,E,45,[[["self"],[R[169]]],["bool"]]],[11,"eq",E,E,8,[[["self"],[R[170]]],["bool"]]],[11,"eq",E,E,7,[[["self"],["str"]],["bool"]]],[11,"eq",E,E,7,[[["self"],["method"]],["bool"]]],[11,"eq",E,E,7,[[["self"],["str"]],["bool"]]],[11,"cmp",E,E,45,[[["self"],[R[169]]],[R[171]]]],[11,"partial_cmp",E,E,45,[[["self"],[R[169]]],[[R[2],[R[171]]],[R[171]]]]],[11,"open",R[164],E,22,[[["self"],["str"],["bool"]],[["arc",["mutex"]],[R[81],["arc"]]]]],[11,"delete",E,E,22,[[["self"],["str"]],[R[81]]]],[11,R[172],E,E,22,[[["self"]],["any"]]],[11,"from",R[61],E,10,[[["parseerror"]],["self"]]],[11,"from",E,E,11,[[["urlparseerror"]],["self"]]],[11,"from",E,E,11,[[["ioerror"]],["self"]]],[11,"from",E,E,12,[[["error"]],["self"]]],[11,"from",E,E,12,[[["ioerror"]],["self"]]],[11,"from",R[163],E,19,[[["httperror"]],["self"]]],[11,"from",R[166],E,26,[[["ioerror"]],["self"]]],[11,"from",E,E,26,[[["error"]],["self"]]],[11,"from",E,E,28,[[["uploadtokenparseerror"]],["self"]]],[11,"from",E,E,28,[[["error"]],["self"]]],[11,"from",E,E,37,[[[R[119]]],["self"]]],[11,"from",E,E,40,[[["value"]],["self"]]],[11,"from",E,E,40,[[["vec",["u8"]],["u8"]],["self"]]],[11,"from",E,E,41,[[["str"],["cow",["str"]]],["self"]]],[11,"from",E,E,41,[[[R[5]]],["self"]]],[11,"from",E,E,41,[[["str"]],["self"]]],[11,"from",E,E,29,[[["decodeerror"]],["self"]]],[11,"from",E,E,29,[[["error"]],["self"]]],[11,"next",R[162],E,46,[[["self"]],[R[2]]]],[11,"as_ref",R[165],E,23,[[["self"]],["str"]]],[11,R[173],R[156],E,2,[[],["configbuilder"]]],[11,R[173],E,E,43,[[],["self"]]],[11,R[173],R[61],"创建默认的域名管理器生成器",13,[[],["self"]]],[11,R[173],E,"创建默认的域名管理器",14,[[],["self"]]],[11,R[173],R[165],E,25,[[],[R[175]]]],[11,R[173],E,E,24,[[],[R[82]]]],[11,R[173],R[166],E,33,[[],["uploadloggerbuilder"]]],[11,R[173],E,E,36,[[],[R[119]]]],[11,R[173],E,E,38,[[],[R[177]]]],[11,R[173],E,E,39,[[],["self"]]],[11,R[173],R[167],E,47,[[],["self"]]],[11,"clone",R[57],E,0,[[["self"]],["client"]]],[11,"clone",E,E,1,[[["self"]],[R[1]]]],[11,"clone",R[156],E,43,[[["self"]],[R[0]]]],[11,"clone",R[61],E,14,[[["self"]],[R[27]]]],[11,"clone",E,E,9,[[["self"]],["choice"]]],[11,"clone",R[163],E,20,[[["self"]],[R[174]]]],[11,"clone",R[164],E,22,[[["self"]],["filesystemrecorder"]]],[11,"clone",R[165],E,23,[[["self"]],[R[92]]]],[11,"clone",E,E,25,[[["self"]],[R[175]]]],[11,"clone",E,E,24,[[["self"]],[R[82]]]],[11,"clone",R[166],E,31,[[["self"]],[R[176]]]],[11,"clone",E,E,27,[[["self"]],[R[129]]]],[11,"clone",E,E,34,[[["self"]],[R[3]]]],[11,"clone",E,E,35,[[["self"]],[R[88]]]],[11,"clone",E,E,36,[[["self"]],[R[119]]]],[11,"clone",E,E,37,[[["self"]],["uploadpolicybuilder"]]],[11,"clone",E,E,38,[[["self"]],[R[177]]]],[11,"clone",E,E,39,[[["self"]],[R[20]]]],[11,"clone",E,E,40,[[["self"]],["uploadresponse"]]],[11,"clone",E,E,41,[[["self"]],[R[178]]]],[11,"eq",R[57],E,1,[[["self"]],["bool"]]],[11,"eq",R[165],E,23,[[["self"],[R[92]]],["bool"]]],[11,"eq",R[166],E,36,[[["self"],[R[119]]],["bool"]]],[11,"ne",E,E,36,[[["self"],[R[119]]],["bool"]]],[11,"eq",E,E,41,[[["self"],[R[178]]],["bool"]]],[11,"ne",E,E,41,[[["self"],[R[178]]],["bool"]]],[11,"fmt",R[61],E,10,[[["self"],[R[168]]],[R[81]]]],[11,"fmt",E,E,11,[[["self"],[R[168]]],[R[81]]]],[11,"fmt",E,E,12,[[["self"],[R[168]]],[R[81]]]],[11,"fmt",R[163],E,19,[[["self"],[R[168]]],[R[81]]]],[11,"fmt",R[166],E,26,[[["self"],[R[168]]],[R[81]]]],[11,"fmt",E,E,28,[[["self"],[R[168]]],[R[81]]]],[11,"fmt",E,E,40,[[["self"],[R[168]]],[R[81]]]],[11,"fmt",E,E,41,[[["self"],[R[168]]],[R[81]]]],[11,"fmt",E,E,29,[[["self"],[R[168]]],[R[81]]]],[11,"fmt",R[57],E,1,[[["self"],[R[168]]],[R[81]]]],[11,"fmt",R[156],E,3,[[["self"],[R[168]]],[R[81]]]],[11,"fmt",E,E,43,[[["self"],[R[168]]],[R[81]]]],[11,"fmt",R[61],E,14,[[["self"],[R[168]]],[R[81]]]],[11,"fmt",E,E,9,[[["self"],[R[168]]],[R[81]]]],[11,"fmt",E,E,10,[[["self"],[R[168]]],[R[81]]]],[11,"fmt",E,E,11,[[["self"],[R[168]]],[R[81]]]],[11,"fmt",E,E,12,[[["self"],[R[168]]],[R[81]]]],[11,"fmt",R[163],E,19,[[["self"],[R[168]]],[R[81]]]],[11,"fmt",R[164],E,22,[[["self"],[R[168]]],[R[81]]]],[11,"fmt",R[165],E,23,[[["self"],[R[168]]],[R[81]]]],[11,"fmt",E,E,24,[[["self"],[R[168]]],[R[81]]]],[11,"fmt",R[166],E,26,[[["self"],[R[168]]],[R[81]]]],[11,"fmt",E,E,27,[[["self"],[R[168]]],[R[81]]]],[11,"fmt",E,E,34,[[["self"],[R[168]]],[R[81]]]],[11,"fmt",E,E,28,[[["self"],[R[168]]],[R[81]]]],[11,"fmt",E,E,36,[[["self"],[R[168]]],[R[81]]]],[11,"fmt",E,E,37,[[["self"],[R[168]]],[R[81]]]],[11,"fmt",E,E,39,[[["self"],[R[168]]],[R[81]]]],[11,"fmt",E,E,40,[[["self"],[R[168]]],[R[81]]]],[11,"fmt",E,E,41,[[["self"],[R[168]]],[R[81]]]],[11,"fmt",E,E,29,[[["self"],[R[168]]],[R[81]]]],[11,"deref",R[156],E,43,[[["self"]],["configinner"]]],[11,"source",R[61],E,10,[[["self"]],[["error"],[R[2],["error"]]]]],[11,"source",E,E,11,[[["self"]],[["error"],[R[2],["error"]]]]],[11,"source",E,E,12,[[["self"]],[["error"],[R[2],["error"]]]]],[11,"source",R[163],E,19,[[["self"]],[["error"],[R[2],["error"]]]]],[11,"source",R[166],E,26,[[["self"]],[["error"],[R[2],["error"]]]]],[11,"source",E,E,28,[[["self"]],[["error"],[R[2],["error"]]]]],[11,"source",E,E,29,[[["self"]],[["error"],[R[2],["error"]]]]],[11,"read",R[167],E,42,[[["self"]],[["usize"],[R[81],["usize"]]]]],[11,"input",E,"向 Etag 计算器输入数据",47,[[["self"],["asref"]]]],[11,"reset",E,"重置 Etag 计算器",47,[[["self"]]]],[11,"fixed_result",E,"从 Etag 计算器获取结果",47,[[],[["genericarray",["u8"]],["u8"]]]],[11,"serialize",R[166],E,36,[[["self"],["__s"]],[R[81]]]],[11,"deserialize",E,E,36,[[["__d"]],[R[81]]]],[11,"new",R[79],E,44,[[[R[179]],[R[2],[R[58]]],[R[58]],[R[170]],[R[80]],["bool"]],["error"]]],[11,"new_retryable_error",E,E,44,[[[R[179]],[R[58]],[R[2],[R[58]]],[R[80]],["bool"]],["error"]]],[11,"new_zone_unretryable_error",E,E,44,[[[R[179]],[R[58]],[R[2],[R[58]]],[R[80]],["bool"]],["error"]]],[11,"new_host_unretryable_error",E,E,44,[[[R[179]],[R[58]],[R[2],[R[58]]],[R[80]],["bool"]],["error"]]],[11,"new_unretryable_error",E,E,44,[[[R[58]],[R[2],[R[58]]],[R[80]],[R[179]]],["error"]]],[11,"new_from_parts",E,E,44,[[[R[179]],[R[2],["method"]],["method"],["box",["str"]],[R[2],["box"]],[R[170]],["bool"]],["error"]]],[11,"new_retryable_error_from_parts",E,E,44,[[[R[179]],[R[2],["method"]],["method"],["box",["str"]],[R[2],["box"]],["bool"]],["error"]]],[11,"new_zone_unretryable_error_from_parts",E,E,44,[[[R[179]],[R[2],["method"]],["method"],["box",["str"]],[R[2],["box"]],["bool"]],["error"]]],[11,"new_host_unretryable_error_from_parts",E,E,44,[[[R[179]],[R[2],["method"]],["method"],["box",["str"]],[R[2],["box"]],["bool"]],["error"]]],[11,"new_unretryable_error_from_parts",E,E,44,[[[R[179]],[R[2],["method"]],["box",["str"]],[R[2],["box"]],["method"]],["error"]]],[11,"retry_kind",E,E,44,[[["self"]],[R[170]]]],[11,"is_retry_safe",E,E,44,[[["self"]],["bool"]]],[11,"method",E,E,44,[[["self"]],[[R[2],["method"]],["method"]]]],[11,"error_kind",E,E,44,[[["self"]],[R[179]]]],[11,"request_id",E,E,44,[[["self"]],[R[2]]]],[11,"url",E,E,44,[[["self"]],[R[2]]]],[11,"new_http_caller_error_kind",E,E,4,[[["impl stderror + send + 'static"],[R[180]]],[R[179]]]],[11,"new",E,E,45,[[["impl into<cow<'n, str>>"]],[R[169]]]],[11,"as_str",E,E,7,[[["self"]],["str"]]],[11,"as_bytes",E,E,7,[[["self"]]]]],"p":[[3,"Client"],[3,R[181]],[3,R[182]],[3,R[183]],[4,R[184]],[8,R[185]],[4,R[186]],[4,"Method"],[4,R[187]],[3,"Choice"],[4,R[60]],[4,R[62]],[4,R[188]],[3,R[189]],[3,R[190]],[8,R[191]],[8,R[192]],[3,R[193]],[3,"Bucket"],[4,R[194]],[3,R[195]],[8,"Recorder"],[3,R[196]],[4,"RegionId"],[3,"Region"],[3,R[197]],[4,R[198]],[4,R[199]],[4,R[200]],[4,R[116]],[3,R[201]],[3,R[202]],[3,R[203]],[3,R[204]],[3,R[205]],[3,R[206]],[3,R[207]],[3,R[208]],[3,R[209]],[3,R[210]],[3,R[211]],[3,R[212]],[3,"Reader"],[3,"Config"],[3,"Error"],[3,R[213]],[3,R[214]],[3,"Etag"]]};
initSearch(searchIndex);addSearchOptions(searchIndex);